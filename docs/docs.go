// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Michele Dinelli",
            "email": "dinellimichele00@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/archive": {
            "get": {
                "description": "Return the list of all the archive images with their metadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "archive"
                ],
                "summary": "Return a list of archive images",
                "responses": {
                    "200": {
                        "description": "The list of archive images",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AculeiImage"
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/v1/archive/image/{id}": {
            "get": {
                "description": "Returns a single archive with its metadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "archive"
                ],
                "summary": "Returns a single archive image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the archive image id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The archive image and its metadata",
                        "schema": {
                            "$ref": "#/definitions/models.AculeiImage"
                        }
                    },
                    "500": {
                        "description": "An error occurred",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponseModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AculeiImage": {
            "type": "object",
            "properties": {
                "cam": {
                    "type": "string",
                    "example": "CAM5"
                },
                "date": {
                    "type": "string",
                    "example": "2021-06-01 22:47:09"
                },
                "id": {
                    "type": "string",
                    "example": "d38a0ec061a460466c253efe9a62cb14"
                },
                "image_name": {
                    "type": "string",
                    "example": "TF_ACULEI_01062021-2741.jpg"
                },
                "moon_phase": {
                    "type": "string",
                    "example": "Waning Crescent"
                },
                "predicted_animal": {
                    "type": "string",
                    "example": "fox"
                },
                "temperature": {
                    "type": "number",
                    "example": 12
                }
            }
        },
        "models.ErrorResponseModel": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "invalid"
                },
                "param": {
                    "type": "string",
                    "example": "param_name"
                },
                "params": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "param1",
                        "param2"
                    ]
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "localhost:8888",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "aculei-be",
	Description:      "Live to serve aculei.xyz",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
